<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<name>sample-config-parent</name>

	<groupId>com.sample</groupId>
	<artifactId>sample-config-parent</artifactId>
	<version>1.0.0-SNAPSHOT</version>

	<packaging>pom</packaging>

	<properties>
		<maven.compiler.target>1.7</maven.compiler.target>
		<maven.compiler.source>1.7</maven.compiler.source>
		<sourceCompliance>1.7</sourceCompliance>
		<targetCompliance>1.7</targetCompliance>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- QA Settings -->
		<wc.qa.skip>true</wc.qa.skip>
		<wcomponent.version>1.4.22</wcomponent.version>
		<multiproject.basedir>${basedir}</multiproject.basedir>
	</properties>

	<licenses>
		<license>
			<name>GPLv3</name>
			<url>http://www.gnu.org/licenses/gpl-3.0.txt</url>
			<distribution>manual</distribution>
			<comments>GNU General Public License</comments>
		</license>
	</licenses>

	<profiles>
		<profile>
			<id>skipAllTests</id>
			<activation>
				<property>
					<name>skipTests</name>
					<value>true</value>
				</property>
			</activation>
			<properties>
				<skipOptionalTests>true</skipOptionalTests>
			</properties>
		</profile>

		<profile>
			<id>openshift</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<outputDirectory>target</outputDirectory>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>com.github.bordertech.wcomponents</groupId>
				<artifactId>wcomponents-bundle</artifactId>
				<version>${wcomponent.version}</version>
			</dependency>

			<dependency>
				<groupId>com.github.bordertech.wcomponents</groupId>
				<artifactId>wcomponents-test-lib</artifactId>
				<version>${wcomponent.version}</version>
			</dependency>

			<dependency>
				<groupId>com.github.bordertech.wcomponents</groupId>
				<artifactId>wcomponents-lde</artifactId>
				<version>${wcomponent.version}</version>
			</dependency>

			<!-- WComponents Addons -->
			<dependency>
				<groupId>com.github.bordertech.wcomponents</groupId>
				<artifactId>wcomponents-addons-bundle</artifactId>
				<version>1.0.2</version>
			</dependency>

			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>2.5</version>
			</dependency>

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.12</version>
				<scope>test</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>


	<build>

		<pluginManagement>
			<plugins>

				<!-- WAR plugin. -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>

				<!-- Compile the java source. -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.6.0</version>
				</plugin>

				<!-- Assembly plugin. -->
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<configuration>
						<archive>
							<manifestEntries>
								<Built-By />
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>

				<!-- Create jar of the source files. -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.0.1</version>
					<configuration>
						<archive>
							<manifestEntries>
								<Built-By />
							</manifestEntries>
						</archive>
						<includes>
							<include>**/*.java</include>
						</includes>
					</configuration>
					<executions>
						<execution>
							<id>sources</id>
							<phase>package</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
						<execution>
							<id>test-sources</id>
							<phase>package</phase>
							<goals>
								<goal>test-jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Build jars.  -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.0.2</version>
					<configuration>
						<archive>
							<manifestEntries>
								<Built-By />
							</manifestEntries>
						</archive>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>test-jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Generate javadoc. -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.10.4</version>
					<configuration>
						<archive>
							<manifestEntries>
								<Built-By />
							</manifestEntries>
						</archive>
						<charset>UTF-8</charset>
						<encoding>UTF-8</encoding>
						<docencoding>UTF-8</docencoding>
						<breakiterator>true</breakiterator>
						<version>true</version>
						<keywords>true</keywords>
						<failOnError>false</failOnError>
					</configuration>
				</plugin>

				<!-- Generate the site. -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.6</version>
					<executions>
						<execution>
							<id>attach-descriptor</id>
							<goals>
								<goal>attach-descriptor</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Check the code style. -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>2.17</version>
					<configuration>
						<skip>${wc.qa.skip}</skip>
						<configLocation>${multiproject.basedir}/qa-resources/sun_checks_wc.xml</configLocation>
						<consoleOutput>true</consoleOutput>
						<failsOnError>true</failsOnError>
						<linkXRef>false</linkXRef>
						<includeTestSourceDirectory>false</includeTestSourceDirectory>
					</configuration>
					<executions>
						<execution>
							<id>checkStyle</id>
							<phase>verify</phase>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- PMD Check. -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>3.7</version>
					<configuration>
						<skip>${wc.qa.skip}</skip>
						<failurePriority>2</failurePriority>
						<printFailingErrors>true</printFailingErrors>
						<includeTests>false</includeTests>
						<format>xml</format>
					</configuration>
					<executions>
						<execution>
							<id>checkPmd</id>
							<phase>verify</phase>
							<goals>
								<!-- Only use PMD (dont block on CPD) for build. -->
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Findbugs check. -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>3.0.4</version>
					<configuration>
						<skip>${wc.qa.skip}</skip>
						<effort>Max</effort>
						<includeTests>false</includeTests>
						<threshold>Medium</threshold>
						<excludeFilterFile>${multiproject.basedir}/qa-resources/findbugs-exclude-filter.xml</excludeFilterFile>
					</configuration>
					<executions>
						<execution>
							<id>checkFindbugs</id>
							<phase>verify</phase>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Code coverage. -->
				<!-- Run twice for the report. -->
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.7.8</version>
					<executions>
						<!-- Prepare jacco agent. -->
						<execution>
							<id>jacoco-agent</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<propertyName>surefireArgLine</propertyName>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<!-- Surefire to run JUNITs -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.19.1</version>
					<configuration>
						<!-- Sets the VM argument line used when unit tests are run. -->
						<argLine>${surefireArgLine}</argLine>
					</configuration>
				</plugin>

				<!-- Generate Reports (Findbugs, Coverage). -->
				<!-- Run site twice. -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.8</version>
					<dependencies>
						<dependency>
							<groupId>com.google.code.findbugs</groupId>
							<artifactId>findbugs</artifactId>
							<version>3.0.1</version>
						</dependency>
						<dependency>
							<groupId>org.jacoco</groupId>
							<artifactId>org.jacoco.ant</artifactId>
							<version>0.7.8</version>
						</dependency>
					</dependencies>
					<executions>
						<execution>
							<id>generateReports</id>
							<phase>site</phase>
							<configuration>
								<target>
									<property name="plugin_classpath" refid="maven.plugin.classpath" />
									<property name="build.dir" value="${project.build.directory}" />
									<property name="site.dir" value="${project.reporting.outputDirectory}" />
									<ant antfile="${basedir}/qa-resources/build-reports.xml">
										<target name="build" />
									</ant>
								</target>
							</configuration>
							<goals>
								<goal>run</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Generate badges. -->
				<!-- Run site twice for badges. -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>xml-maven-plugin</artifactId>
					<version>1.0.1</version>
					<executions>
						<execution>
							<phase>site</phase>
							<goals>
								<goal>transform</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<catalogs>
							<catalog>${multiproject.basedir}/qa-resources/jacoco-catalog.xml</catalog>
						</catalogs>
						<transformationSets>
							<transformationSet>
								<dir>target</dir>
								<includes>
									<include>pmd.xml</include>
									<include>findbugs-report.xml</include>
									<include>checkstyle-result.xml</include>
									<include>coverage-report.xml</include>
								</includes>
								<fileMappers>
									<fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
										<targetExtension>.svg</targetExtension>
									</fileMapper>
								</fileMappers>
								<stylesheet>${multiproject.basedir}/qa-resources/badges.xsl</stylesheet>
								<outputDir>target/site/badges</outputDir>
							</transformationSet>
						</transformationSets>
					</configuration>
				</plugin>

				<!-- Allows project to be run via mvn jetty:run from the web-war module. -->
				<plugin>
					<groupId>org.eclipse.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<version>9.2.20.v20161216</version>
				</plugin>

			</plugins>

		</pluginManagement>

		<plugins>

			<!-- Compile the java source. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>

			<!-- Create jar of the source files. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>

			<!-- Build jars. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
			</plugin>

			<!-- Generate the site. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
			</plugin>

			<!-- QA Checks. -->
			<!-- Check the code style. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
			</plugin>

			<!-- PMD Check. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
			</plugin>

			<!-- Findbugs check. -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
			</plugin>

			<!-- Code coverage. -->
			<!-- Run twice for the report. -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>

			<!-- Surefire to run JUNITs -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>

		</plugins>

	</build>

	<reporting>

		<plugins>

			<!-- Generate Reports Information about the project. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.9</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>index</report>
							<report>license</report>
							<report>mailing-list</report>
							<report>summary</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<!-- Generate Findbugs reports. (Does not support aggregate.) -->
			<!-- Run site twice to get Findbugs report.-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.4</version>
				<!-- Override the build settings. -->
				<configuration>
					<skip>false</skip>
					<threshold>Low</threshold>
					<failOnError>false</failOnError>
					<findbugsXmlOutputDirectory>${project.build.directory}/findbugs-rep</findbugsXmlOutputDirectory>
				</configuration>
			</plugin>

			<!-- Submodules include the aggregated reports in their own parent pom. -->
			<!-- Produce a cross-reference of the project's source. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.5</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>aggregate</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<!-- Generate Javadoc. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.3</version>
				<!-- Use build configuration. -->
				<reportSets>
					<reportSet>
						<reports>
							<report>aggregate</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<!-- Generate the web interface version of the test results. -->
			<!-- Run site twice to get correct results. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<aggregate>true</aggregate>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<!-- QA Reports. -->
			<!-- Generate the Checkstyle report. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.17</version>
				<!-- Override the build settings. -->
				<configuration>
					<skip>false</skip>
					<configLocation>${multiproject.basedir}/qa-resources/sun_checks_wc.xml</configLocation>
					<consoleOutput>true</consoleOutput>
					<headerFile />
					<failsOnError>false</failsOnError>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>checkstyle-aggregate</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<!-- PMD and CPD Reports. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.5</version>
				<!-- Override the build settings. -->
				<configuration>
					<skip>false</skip>
					<aggregate>true</aggregate>
					<failurePriority>5</failurePriority>
					<skipEmptyReport>false</skipEmptyReport>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>pmd</report>
							<report>cpd</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

		</plugins>
	</reporting>

</project>
